<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:conv="clr-namespace:POSSystem.UI.Converter"
    xmlns:ctrl="clr-namespace:POSSystem.UI.Controls"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <SolidColorBrush
        x:Key="LowQty"
        Opacity="0.35"
        Color="Red" />

    <Thickness x:Key="UserControl.StackPanel.TopMost">0 8 0 15</Thickness>
    <Thickness x:Key="ControlMargin">0 2</Thickness>
    <Thickness x:Key="ControlPadding">5</Thickness>

    <LinearGradientBrush x:Key="AccentBackground" StartPoint="1,1" EndPoint="0,0">
        <GradientStop Offset="0.00" Color="{DynamicResource MahApps.Colors.Accent}" />
        <GradientStop Offset="0.25" Color="{DynamicResource MahApps.Colors.Accent2}" />
        <GradientStop Offset="0.50" Color="{DynamicResource MahApps.Colors.Accent3}" />
        <GradientStop Offset="0.75" Color="{DynamicResource MahApps.Colors.Accent4}" />
    </LinearGradientBrush>


    <Style x:Key="row.option.icon" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <DataTemplate x:Key="Correct">
        <iconPacks:PackIconBootstrapIcons
            x:Name="icnAbc"
            Width="15"
            Height="15"
            Kind="Check"
            Style="{StaticResource row.option.icon}" />
    </DataTemplate>

    <DataTemplate x:Key="InCorrect">
        <iconPacks:PackIconBootstrapIcons
            x:Name="icnAbc"
            Width="15"
            Height="15"
            Kind="X"
            Style="{StaticResource row.option.icon}" />
    </DataTemplate>

    <Style x:Key="Profile.IsAdmin" TargetType="iconPacks:PackIconBootstrapIcons">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                <Setter Property="Kind" Value="Check2Circle" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="User.IsAdmin" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                <Setter Property="Kind" Value="Check" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="User.IsActive" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="Kind" Value="Check" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActive}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="icon.Calculate.VAT" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,-5" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding CalculateVATOnSales, Mode=OneWay}" Value="True">
                <Setter Property="Kind" Value="Check2Circle" />
                <Setter Property="Foreground" Value="Green" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CalculateVATOnSales, Mode=OneWay}" Value="False">
                <Setter Property="Kind" Value="XCircleFill" />
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="icon.Print.Invoice" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,-5" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding PrintInvoice, Mode=OneWay}" Value="True">
                <Setter Property="Kind" Value="Check2Circle" />
                <Setter Property="Foreground" Value="Green" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PrintInvoice, Mode=OneWay}" Value="False">
                <Setter Property="Kind" Value="XCircleFill" />
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>