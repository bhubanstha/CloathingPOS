<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:conv="clr-namespace:POSSystem.UI.Converter"
    xmlns:ctrl="clr-namespace:POSSystem.UI.Controls"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">

    <conv:QuantityLowStock x:Key="QtyLow" />


    <LinearGradientBrush x:Key="AccentBackground" StartPoint="1,1" EndPoint="0,0">
        <GradientStop Offset="0.00" Color="{DynamicResource MahApps.Colors.Accent}" />
        <GradientStop Offset="0.25" Color="{DynamicResource MahApps.Colors.Accent2}" />
        <GradientStop Offset="0.50" Color="{DynamicResource MahApps.Colors.Accent3}" />
        <GradientStop Offset="0.75" Color="{DynamicResource MahApps.Colors.Accent4}" />
    </LinearGradientBrush>


    <Style x:Key="App.Hamburger" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridRow.Accent" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridNumericColumn" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="GridNumericColumn.Center" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>


    <Style x:Key="HyperLink.Contact.Me" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HyperLink.Forgot.Password" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BlueNeutral}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="row.option.icon" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="Button.Circle.In.GridRow"
        BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
        TargetType="Button">
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>

        </Style.Triggers>

    </Style>


    <DataTemplate x:Key="Correct">
        <iconPacks:PackIconBootstrapIcons
            x:Name="icnAbc"
            Width="15"
            Height="15"
            Kind="Check"
            Style="{StaticResource row.option.icon}" />
    </DataTemplate>

    <DataTemplate x:Key="InCorrect">
        <iconPacks:PackIconBootstrapIcons
            x:Name="icnAbc"
            Width="15"
            Height="15"
            Kind="X"
            Style="{StaticResource row.option.icon}" />
    </DataTemplate>

    <Style x:Key="Profile.IsAdmin" TargetType="iconPacks:PackIconBootstrapIcons">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                <Setter Property="Kind" Value="Check2Circle" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="User.IsAdmin" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                <Setter Property="Kind" Value="Check" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="User.IsActive" TargetType="iconPacks:PackIconBootstrapIcons">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="Kind" Value="Check" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActive}" Value="False">
                <Setter Property="Kind" Value="X" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="col.Boolean.IsAdmin"
        BasedOn="{StaticResource Button.Circle.In.GridRow}"
        TargetType="Button">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource Correct}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsAdmin}" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource InCorrect}" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style
        x:Key="col.Boolean.IsActive"
        BasedOn="{StaticResource Button.Circle.In.GridRow}"
        TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>

            <DataTrigger Binding="{Binding IsActive}" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource Correct}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsActive}" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource InCorrect}" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="Grid.Numeric.Column" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0,0,5,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="AutoCompleteBox"
        BasedOn="{StaticResource MahApps.Styles.TextBox}"
        TargetType="ctrl:AutoCompleteTextBox" />



    <Style
        x:Key="NewCustomDialogStyle"
        BasedOn="{StaticResource {x:Type Dialog:BaseMetroDialog}}"
        TargetType="{x:Type Dialog:BaseMetroDialog}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Dialog:BaseMetroDialog}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DialogShownStoryboard">
                            <DoubleAnimation
                                AccelerationRatio=".9"
                                BeginTime="0:0:0"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Border FocusVisualStyle="{x:Null}" Focusable="False">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0" Content="{TemplateBinding DialogTop}" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10*" />
                                        <ColumnDefinition Width="80*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Content area  -->
                                    <Grid Grid.Column="1" Margin="0,10,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            FontSize="{DynamicResource DialogTitleFontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Title}"
                                            TextWrapping="Wrap" />
                                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                                    </Grid>
                                </Grid>
                                <ContentPresenter Grid.Row="2" Content="{TemplateBinding DialogBottom}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush
        x:Key="LowQty"
        Opacity="0.35"
        Color="Red" />
    <Style
        x:Key="DataGrid.Inventory.List.Row"
        BasedOn="{StaticResource MahApps.Styles.DataGridRow.Azure}"
        TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Quantity, Converter={StaticResource QtyLow}}" Value="True">
                <Setter Property="Background" Value="{StaticResource LowQty}" />
            </DataTrigger>

            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Binding="{Binding Quantity}" Value="3"/>
                </MultiTrigger.Conditions>
                 <Setter Property="Background" Value="{StaticResource LowQty}" />
            </MultiTrigger>



            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.ThemeForeground}" />
            </MultiDataTrigger>-->
        </Style.Triggers>
    </Style>
</ResourceDictionary>