<mah:MetroWindow
    x:Class="POSSystem.UI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:POSSystem.UI.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:flyout="clr-namespace:POSSystem.UI.Views.Flyouts"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:POSSystem.UI"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sc="clr-namespace:POSSystem.UI.Service"
    xmlns:views="clr-namespace:POSSystem.UI.Views"
    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
    Name="MetroMainWindow"
    Title="{Binding Source={x:Static sc:StaticContainer.ApplicationName}}"
    Width="800"
    Height="450"
    MinWidth="800"
    MinHeight="400"
    GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
    Icon="/Image/pos_icon.png"
    TitleCharacterCasing="Normal"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <conv:WindowHeightConverter x:Key="HeightConverter" />
            <!--  This is the template for the menu items.  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False"
                        IsTabStop="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider
                x:Key="DisplayModeEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type mah:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider
                x:Key="VisibilityEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style
                x:Key="MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple"
                BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid
                                x:Name="RootGrid"
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle
                                            x:Name="SelectionIndicator"
                                            Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                            Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                            Fill="{TemplateBinding Foreground}"
                                            Focusable="False"
                                            Opacity="0.0" />
                                    </Grid>
                                    <ContentControl
                                        x:Name="ContentPresenter"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Focusable="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="ContentPresenter" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                <Setter Property="mah:ItemHelper.HoverSelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
            </Style>

            <Style
                x:Key="MahApps.Styles.HamburgerMenu.Ripple"
                BasedOn="{StaticResource MahApps.Styles.HamburgerMenu}"
                TargetType="{x:Type mah:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem.Ripple}" />
                <Setter Property="PaneBackground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                <Setter Property="PaneForeground" Value="{DynamicResource MahApps.Brushes.Text}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>

            <LinearGradientBrush x:Key="AccentBackgroundTest" StartPoint="1,1" EndPoint="0,0">
                <GradientStop Offset="1.00" Color="{DynamicResource MahApps.Colors.Accent2}" />
                <GradientStop Offset="0.25" Color="{DynamicResource MahApps.Colors.Accent3}" />
                <GradientStop Offset="0.50" Color="{DynamicResource MahApps.Colors.Accent4}" />

            </LinearGradientBrush>
        </ResourceDictionary>
    </Window.Resources>

    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <Image Source="/Image/pos_icon.png" />
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>

    <!--<mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button ToolTip="Open up the GitHub site">
                <iconPacks:Material Width="22"
                                  Height="22"
                                  Kind="AbjadHebrew" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>-->

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button
                x:Name="btnCmdUserName"
                Command="{Binding UserMenuCommand}"
                CommandParameter="{Binding ElementName=UMenuPopup}"
                Content="{Binding User.DisplayName}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconFontAwesome
                                Width="22"
                                Height="22"
                                VerticalAlignment="Center"
                                Kind="UserAltSolid" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="{Binding}" />
                        </StackPanel>

                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl x:Name="flyoutcontrol">
            <flyout:SettingFlyout x:Name="SettingsFlyout" />
            <flyout:AddCategoryFlyout x:Name="CategoryFlyout" />
            <mah:Flyout
                x:Name="NoSearchResultFlyout"
                Height="50"
                CloseButtonVisibility="Collapsed"
                IsPinned="False"
                Position="Top"
                Theme="Inverse"
                TitleVisibility="Visible">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource NotificationRed}"
                    Text="Search didn't return any result. Please try again" />
            </mah:Flyout>
        </mah:FlyoutsControl>

    </mah:MetroWindow.Flyouts>

    <!--  Height="{Binding ElementName=MetroMainWindow, Path=ActualHeight, Mode=OneWay}"  -->
    <DockPanel x:Name="container" Background="{DynamicResource AccentBackgroundTest}">
        <Popup
            x:Name="UMenuPopup"
            AllowsTransparency="True"
            HorizontalOffset="120"
            IsOpen="{Binding IsUserMenuVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Placement="RelativePoint"
            PlacementTarget="{Binding ElementName=btnCmdUserName}"
            StaysOpen="False"
            VerticalOffset="28">
            <views:UserMenuPopupControl />
        </Popup>

        <mah:HamburgerMenu
            x:Name="HamburgerMenuControl"
            Grid.Row="0"
            Grid.Column="0"
            HamburgerButtonName="btnHamburgerMenuOpenClose"
            HamburgerButtonStyle="{DynamicResource App.Hamburger}"
            HamburgerHeight="72"
            IsPaneOpen="True"
            ItemInvoked="HamburgerMenuControl_ItemInvoked"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            SelectedIndex="0"
            Style="{StaticResource MahApps.Styles.HamburgerMenu.Ripple}"
            VerticalScrollBarOnLeftSide="False">
            <!--  Items  -->
            <mah:HamburgerMenu.ItemsSource>
                <mah:HamburgerMenuItemCollection>
                    <mah:HamburgerMenuIconItem
                        x:Name="menuUserMgmt"
                        Icon="{iconPacks:Material Kind=Account}"
                        IsVisible="{Binding IsAdminMenuVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Label="User Management">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:CreateUserView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=TshirtCrew}" Label="Inventory">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:InventoryView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=History}" Label="Inventory List">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:InventoryListView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=PrinterPos}" Label="Sales">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:SalesView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=PrinterPos}" Label="Sales Return">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:SalesReturnView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem
                        x:Name="menuReport"
                        Icon="{iconPacks:Material Kind=FileDocument}"
                        Label="Report">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:SalesView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem
                        x:Name="menuGraphs"
                        Icon="{iconPacks:Material Kind=ChartBox}"
                        Label="Graph">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:GraphView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                    <mah:HamburgerMenuIconItem
                        x:Name="menuUserProfile"
                        Icon="{iconPacks:Material Kind=FaceProfile}"
                        IsVisible="False"
                        Label="Profile">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:UserProfileView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                </mah:HamburgerMenuItemCollection>
            </mah:HamburgerMenu.ItemsSource>



            <!--  Options  -->
            <mah:HamburgerMenu.OptionsItemsSource>
                <mah:HamburgerMenuItemCollection>
                    <mah:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Information}" Label="About">
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:AboutView />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>
                </mah:HamburgerMenuItemCollection>
            </mah:HamburgerMenu.OptionsItemsSource>

            <mah:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Image Source="/Image/pos_company_logo.png" />
                    </StackPanel>
                </DataTemplate>
            </mah:HamburgerMenu.HamburgerMenuHeaderTemplate>
            <mah:HamburgerMenu.ContentTemplate>
                <DataTemplate DataType="{x:Type mah:HamburgerMenuIconItem}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                x:Name="lblHeaderText"
                                Grid.Row="0"
                                Grid.Column="0"
                                Padding="0,0,0,5"
                                FontFamily="{DynamicResource MahApps.Fonts.Family.Header}"
                                FontSize="{DynamicResource MahApps.Font.Size.Header}"
                                Text="{Binding Label}"
                                TextAlignment="Center" />
                            <iconPacks:PackIconMaterial
                                Width="40"
                                Height="40"
                                Margin="0,0,10,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Kind="{Binding Icon.Kind}" />
                            <Border
                                Grid.Row="1"
                                BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                                BorderThickness="3px" />
                            <ContentControl
                                Grid.Row="2"
                                Margin="10,0,0,0"
                                Content="{Binding Tag}"
                                Focusable="False" />
                        </Grid>
                    </ScrollViewer>
                </DataTemplate>
            </mah:HamburgerMenu.ContentTemplate>

        </mah:HamburgerMenu>

    </DockPanel>


</mah:MetroWindow>
